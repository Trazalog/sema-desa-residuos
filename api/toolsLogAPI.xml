<api xmlns="http://ws.apache.org/ns/synapse" name="toolsLogAPI" context="/tools/log">
   <resource methods="POST" uri-template="/solicitudContenedores">
      <inSequence>
         <property name="uri.var.bpmSession" value="$.uri.var.bpmSession" type="STRING"/>
         <property xmlns:ns2="http://org.apache.synapse/xsd" xmlns:ns="http://org.apache.synapse/xsd" name="apiconf" expression="get-property('registry','conf:tools/apiconf.xml')" scope="default" type="OM"/>
         <property xmlns:ns2="http://org.apache.synapse/xsd" xmlns:ns="http://org.apache.synapse/xsd" name="api_url" expression="$ctx:apiconf//api_url"/>
         <property xmlns:ns2="http://org.apache.synapse/xsd" xmlns:ns="http://org.apache.synapse/xsd" name="dataservices_url" expression="$ctx:apiconf//dataservices_url"/>
         <log level="custom">
            <property name="donde" value="dentro de solicitudContenedor"/>
            <property name="payload" expression="json-eval($)"/>
            <property name="api url" expression="$ctx:api_url"/>
            <property name="ds url" expression="$ctx:dataservices_url"/>
         </log>
         <script language="js">var payload = mc.getPayloadJSON();  mc.setProperty("ORIGINAL_PAYLOAD",JSON.stringify(payload));</script>
         <payloadFactory media-type="json" description="crear solicitud">
            <format>       {          "_post_solicitudcontenedor":{               "observaciones": "$1",                "usuario_app": "$2",                "sotr_id": "$3"      ,"tran_id":"$4" }     }     </format>
            <args>
               <arg evaluator="json" expression="$.solicitudContenedores.observaciones"/>
               <arg evaluator="json" expression="$.solicitudContenedores.usuario_app"/>
               <arg evaluator="json" expression="$.solicitudContenedores.sotr_id"/>
               <arg evaluator="json" expression="$.solicitudContenedores.tran_id"/>
            </args>
         </payloadFactory>
         <property name="messageType" value="application/json" scope="axis2"/>
         <header name="Accept" scope="transport" value="application/json"/>
         <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
         <property name="uri.var.solicitudContenedor_url" expression="fn:concat($ctx:dataservices_url,'/solicitudContenedor')" scope="default"/>
         <log level="custom" category="DEBUG">
            <property name="donde" value="dentro de solicitudContenedor RR"/>
            <property name="payload" expression="json-eval($)"/>
            <property name="api url" expression="$ctx:uri.var.solicitudContenedor_url"/>
         </log>
         <call>
            <endpoint>
               <http method="POST" uri-template="{uri.var.solicitudContenedor_url}"/>
            </endpoint>
         </call>
         <filter source="get-property('axis2', 'HTTP_SC')" regex="2[0-9][0-9]">
            <then/>
            <else>
               <property name="ERROR_MESSAGE" expression="json-eval($)" type="STRING"/>
               <property name="TOOLS_ERROR" value="POST /solicitudContenedor con problemas" type="STRING"/>
               <sequence key="toolsFault"/>
            </else>
         </filter>
         <log level="custom" category="DEBUG" description="donde 3">
            <property name="msg actual 3 despues solicitud contenedor" expression="json-eval($)"/>
            <property name="soco id" expression="json-eval($.respuesta.soco_id)"/>
         </log>
         <property name="setIdEnHijos_elemento_origen" value="solicitudContenedores" type="STRING"/>
         <property name="setIdEnHijos_elemento_destino" value="_post_solicitudcontenedor_tipocarga_batch_req" type="STRING"/>
         <property name="setIdEnHijos_arreglo_origen" value="contenedores" type="STRING"/>
         <property name="setIdEnHijos_arreglo_destino" value="_post_solicitudcontenedor_tipocarga" type="STRING"/>
         <property name="setIdEnHijos_propiedad_destino" value="soco_id" type="STRING"/>
         <property name="setIdEnHijos_id_padre" expression="json-eval($.respuesta.soco_id)" type="STRING"/>
         <script language="js" key="conf:tools/setIdEnHijos.js" function="setIdEnHijos"/>
         <header name="Accept" scope="transport" value="application/json"/>
         <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
         <log level="custom" category="DEBUG" description="donde 4">
            <property name="msg actual 4 antes de contenedores solicitados" expression="json-eval($)"/>
         </log>
         <property name="uri.var.contenedoresSolicitados_url" expression="fn:concat($ctx:dataservices_url,'/_post_solicitudcontenedor_tipocarga_batch_req')" scope="default"/>
         <log level="custom" category="DEBUG">
            <property name="payload" expression="json-eval($)"/>
            <property name="invocar url" expression="$ctx:uri.var.contenedoresSolicitados_url"/>
         </log>
         <call>
            <endpoint>
               <http method="POST" uri-template="{uri.var.contenedoresSolicitados_url}"/>
            </endpoint>
         </call>
         <filter source="get-property('axis2', 'HTTP_SC')" regex="2[0-9][0-9]">
            <then/>
            <else>
               <property name="ERROR_MESSAGE" expression="json-eval($)" type="STRING"/>
               <header name="Accept" scope="transport" value="application/json"/>
               <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
               <payloadFactory media-type="json" description="borrar solicitud">
                  <format>{ "_delete_solicitudcontenedor": { "soco_id":"$1"} }</format>
                  <args>
                     <arg evaluator="xml" expression="get-property('setIdEnHijos_id_padre')"/>
                  </args>
               </payloadFactory>
               <property name="uri.var.solicitudContenedorDELETE" expression="fn:concat($ctx:dataservices_url,'/solicitudContenedor')" scope="default"/>
               <call>
                  <endpoint>
                     <http method="DELETE" uri-template="{uri.var.solicitudContenedorDELETE}"/>
                  </endpoint>
               </call>
               <property name="TOOLS_ERROR" value="POST /_post_solicitudcontenedor_tipocarga_batch_req con problemas" type="STRING"/>
               <sequence key="toolsFault"/>
            </else>
         </filter>
         <log level="custom" category="DEBUG" description="donde 4">
            <property name="msg actual 5 despues de contenedores solicitados" expression="json-eval($)"/>
         </log>
         <header name="Accept" scope="transport" value="application/json"/>
         <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
         <payloadFactory media-type="json" description="crear solicitud">
            <format>                 { "nombre_proceso": "TERSU-BPM01"     ,"payload" : { "idPedido":"$1"}     ,"session" :"$2"          }     </format>
            <args>
               <arg evaluator="xml" expression="get-property('setIdEnHijos_id_padre')"/>
               <arg evaluator="xml" expression="get-property('uri.var.bpmSession')"/>
            </args>
         </payloadFactory>
         <log level="custom" category="DEBUG" description="donde 4">
            <property name="msg actual 5 antes de BPM" expression="json-eval($)"/>
         </log>
         <property name="uri.var.instanciaBPM_url" expression="fn:concat($ctx:api_url,'/bpm/proceso/instancia')" scope="default"/>
         <call>
            <endpoint>
               <http method="POST" uri-template="{uri.var.instanciaBPM_url}"/>
            </endpoint>
         </call>
         <log level="custom" category="DEBUG" description="resp bonita 4">
            <property name="resp" expression="get-property('axis2', 'HTTP_SC')"/>
         </log>
         <filter source="get-property('axis2', 'HTTP_SC')" regex="2[0-9][0-9]">
            <then/>
            <else>
               <property name="ERROR_MESSAGE" expression="json-eval($)" type="STRING"/>
               <header name="Accept" scope="transport" value="application/json"/>
               <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
               <payloadFactory media-type="json" description="borrar solicitud">
                  <format>{ "_delete_solicitudcontenedor": { "soco_id":"$1"} }</format>
                  <args>
                     <arg evaluator="xml" expression="get-property('setIdEnHijos_id_padre')"/>
                  </args>
               </payloadFactory>
               <log level="custom" category="DEBUG" description="delete sol">
                  <property name="delete" expression="json-eval($)"/>
               </log>
               <property name="uri.var.solicitudContenedorDELETE" expression="fn:concat($ctx:dataservices_url,'/solicitudContenedor')" scope="default"/>
               <call>
                  <endpoint>
                     <http method="DELETE" uri-template="{uri.var.solicitudContenedorDELETE}"/>
                  </endpoint>
               </call>
               <property name="TOOLS_ERROR" value="POST /bpm/proceso/instancia con problemas" type="STRING"/>
               <sequence key="toolsFault"/>
            </else>
         </filter>
         <log level="custom" category="DEBUG" description="donde 4">
            <property name="msg actual 6 despues de BPM" expression="json-eval($)"/>
         </log>
         <property name="uri.var.caseid" expression="json-eval($.payload.caseId)" type="STRING"/>
         <property name="uri.var.bpmSession" expression="json-eval($.session)" type="STRING"/>
         <header name="Accept" scope="transport" value="application/json"/>
         <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
         <payloadFactory media-type="json" description="crear solicitud">
            <format>                               {      "_put_solicitudContenedor_caseid":{        "case_id":"$1",         "soco_id":"$2"        }      }      </format>
            <args>
               <arg evaluator="json" expression="$.payload.caseId"/>
               <arg evaluator="xml" expression="get-property('setIdEnHijos_id_padre')"/>
            </args>
         </payloadFactory>
         <log level="custom" category="DEBUG" description="donde 4">
            <property name="msg actual 7 despues de BPM antes de actualizar caseid" expression="json-eval($)"/>
         </log>
         <property name="uri.var.solicitudContenedorCaseId_url" expression="fn:concat($ctx:dataservices_url,'/solicitudContenedor/caseid')" scope="default"/>
         <call>
            <endpoint>
               <http method="PUT" uri-template="{uri.var.solicitudContenedorCaseId_url}"/>
            </endpoint>
         </call>
         <filter source="get-property('axis2', 'HTTP_SC')" regex="2[0-9][0-9]">
            <then/>
            <else>
               <property name="ERROR_MESSAGE" expression="json-eval($)" type="STRING"/>
               <header name="Accept" scope="transport" value="application/json"/>
               <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
               <payloadFactory media-type="json" description="borrar solicitud">
                  <format>{ "_delete_solicitudcontenedor": { "soco_id":"$1"} }</format>
                  <args>
                     <arg evaluator="xml" expression="get-property('setIdEnHijos_id_padre')"/>
                  </args>
               </payloadFactory>
               <property name="uri.var.solicitudContenedorDELETE" expression="fn:concat($ctx:dataservices_url,'/solicitudContenedor')" scope="default"/>
               <call>
                  <endpoint>
                     <http method="DELETE" uri-template="{uri.var.solicitudContenedorDELETE}"/>
                  </endpoint>
               </call>
               <header name="Accept" scope="transport" value="application/json"/>
               <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
               <property name="uri.var.borrarInstanciaBPM_url" expression="fn:concat($ctx:api_url,'/bpm/proceso/instancia/')" scope="default"/>
               <log level="custom" category="DEBUG" description="donde 10">
                  <property name="msg actual 10 eliminando caso de BPM" expression="json-eval($)"/>
                  <property name="url actual 10 eliminando caso de BPM" expression="$ctx:uri.var.borrarInstanciaBPM_url"/>
               </log>
               <call>
                  <endpoint>
                     <http method="DELETE" uri-template="{uri.var.borrarInstanciaBPM_url}"/>
                  </endpoint>
               </call>
               <property name="TOOLS_ERROR" value="PUT /solicitudContenedor/caseid con problemas" type="STRING"/>
               <sequence key="toolsFault"/>
            </else>
         </filter>
         <log level="full" category="DEBUG" description="salida insequence"/>
         <loopback/>
      </inSequence>
      <outSequence>
         <log level="full" category="DEBUG">
            <property name="MESSAGE" value="FIRST"/>
         </log>
         <payloadFactory media-type="json" description="Mensaje error">
            <format>{"respuesta":              { "resultado" : "ok"              , "soco_id":"$1"                 , "case_id":"$2"           , "bpmSession":"$3"   }             }</format>
            <args>
               <arg evaluator="xml" expression="get-property('setIdEnHijos_id_padre')"/>
               <arg evaluator="xml" expression="get-property('uri.var.caseid')"/>
               <arg evaluator="xml" expression="get-property('uri.var.bpmSession')"/>
            </args>
         </payloadFactory>
         <log level="full"/>
         <send/>
      </outSequence>
      <faultSequence>
         <property name="ERROR_MESSAGE" expression="json-eval($)" type="STRING"/>
         <property name="TOOLS_ERROR" value="Error general generando Solicitud de Contendores" type="STRING"/>
         <sequence key="toolsFault"/>
      </faultSequence>
   </resource>
   <resource methods="POST" uri-template="/solicitudRetiroContenedores">
      <inSequence>
         <property name="uri.var.bpmSession" value="$.uri.var.bpmSession" type="STRING"/>
         <property xmlns:ns2="http://org.apache.synapse/xsd" xmlns:ns="http://org.apache.synapse/xsd" name="apiconf" expression="get-property('registry','conf:tools/apiconf.xml')" scope="default" type="OM"/>
         <property xmlns:ns2="http://org.apache.synapse/xsd" xmlns:ns="http://org.apache.synapse/xsd" name="api_url" expression="$ctx:apiconf//api_url"/>
         <property xmlns:ns2="http://org.apache.synapse/xsd" xmlns:ns="http://org.apache.synapse/xsd" name="dataservices_url" expression="$ctx:apiconf//dataservices_url"/>
         <log level="custom">
            <property name="donde" value="dentro de solicitudRetiroContenedores"/>
            <property name="payload" expression="json-eval($)"/>
         </log>
         <script language="js">var payload = mc.getPayloadJSON();  mc.setProperty("ORIGINAL_PAYLOAD",JSON.stringify(payload));</script>
         <payloadFactory media-type="json" description="crear solicitud retiro">
            <format>       {          "_post_solicitudretiro":{   "usuario_app": "$1" ,"sotr_id":"$2"   }     }     </format>
            <args>
               <arg evaluator="json" expression="$.solicitudRetiroContenedores.usuario_app"/>
               <arg evaluator="json" expression="$.solicitudRetiroContenedores.sotr_id"/>
            </args>
         </payloadFactory>
         <property name="messageType" value="application/json" scope="axis2"/>
         <header name="Accept" scope="transport" value="application/json"/>
         <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
         <log level="custom" category="DEBUG" description="aca">
            <property name="msg actual 2 antes solicitud retiro contenedor " expression="json-eval($)"/>
         </log>
         <property name="uri.var.solicitudRetiro_url" expression="fn:concat($ctx:dataservices_url,'/solicitudRetiro')" scope="default"/>
         <call>
            <endpoint>
               <http method="POST" uri-template="{uri.var.solicitudRetiro_url}"/>
            </endpoint>
         </call>
         <filter source="get-property('axis2', 'HTTP_SC')" regex="2[0-9][0-9]">
            <then/>
            <else>
               <property name="ERROR_MESSAGE" expression="json-eval($)" type="STRING"/>
               <property name="TOOLS_ERROR" value="POST /solicitudRetiro con problemas" type="STRING"/>
               <sequence key="toolsFault"/>
            </else>
         </filter>
         <log level="custom" category="DEBUG" description="donde 3">
            <property name="msg actual 3 despues solicitud retiro contenedor" expression="json-eval($)"/>
            <property name="sore id" expression="json-eval($.respuesta.sore_id)"/>
         </log>
         <property name="setIdEnHijos_elemento_origen" value="solicitudRetiroContenedores" type="STRING"/>
         <property name="setIdEnHijos_elemento_destino" value="_put_contenedores_entregados_retirar_batch_req" type="STRING"/>
         <property name="setIdEnHijos_arreglo_origen" value="contenedores" type="STRING"/>
         <property name="setIdEnHijos_arreglo_destino" value="_put_contenedores_entregados_retirar" type="STRING"/>
         <property name="setIdEnHijos_propiedad_destino" value="sore_id" type="STRING"/>
         <property name="setIdEnHijos_id_padre" expression="json-eval($.respuesta.sore_id)" type="STRING"/>
         <script language="js" key="conf:tools/setIdEnHijos.js" function="setIdEnHijos"/>
         <header name="Accept" scope="transport" value="application/json"/>
         <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
         <log level="custom" category="DEBUG" description="donde 4">
            <property name="msg actual 4 antes de contenedores entregados solicitud retiro " expression="json-eval($)"/>
         </log>
         <property name="uri.var.contenedoresEntregadorRetirar_url" expression="fn:concat($ctx:dataservices_url,'/_put_contenedores_entregados_retirar_batch_req')" scope="default"/>
         <call>
            <endpoint>
               <http method="PUT" uri-template="{uri.var.contenedoresEntregadorRetirar_url}"/>
            </endpoint>
         </call>
         <filter source="get-property('axis2', 'HTTP_SC')" regex="2[0-9][0-9]">
            <then/>
            <else>
               <property name="ERROR_MESSAGE" expression="json-eval($)" type="STRING"/>
               <header name="Accept" scope="transport" value="application/json"/>
               <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
               <payloadFactory media-type="json" description="borrar solicitud">
                  <format>{ "_delete_solicitudretiro": { "sore_id":"$1"} }</format>
                  <args>
                     <arg evaluator="xml" expression="get-property('setIdEnHijos_id_padre')"/>
                  </args>
               </payloadFactory>
               <property name="uri.var.solicitudRetiroDELETE" expression="fn:concat($ctx:dataservices_url,'/solicitudRetiro')" scope="default"/>
               <call>
                  <endpoint>
                     <http method="DELETE" uri-template="{uri.var.solicitudRetiroDELETE}"/>
                  </endpoint>
               </call>
               <property name="TOOLS_ERROR" value="PUT /_put_contenedores_entregados_retirar_batch_req con problemas, borrando solicitud" type="STRING"/>
               <sequence key="toolsFault"/>
            </else>
         </filter>
         <log level="custom" category="DEBUG" description="donde 4">
            <property name="msg actual 5 despues de contenedores solicitados" expression="json-eval($)"/>
         </log>
         <header name="Accept" scope="transport" value="application/json"/>
         <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
         <payloadFactory media-type="json" description="crear solicitud">
            <format>                 { "nombre_proceso": "TERSU-BPM02"     ,"payload" : { "idSolicitudRetiro":"$1"}     ,"session" :"$2"          }     </format>
            <args>
               <arg evaluator="xml" expression="get-property('setIdEnHijos_id_padre')"/>
               <arg evaluator="xml" expression="get-property('uri.var.bpmSession')"/>
            </args>
         </payloadFactory>
         <log level="custom" category="DEBUG" description="donde 4">
            <property name="msg actual 5 antes de BPM" expression="json-eval($)"/>
         </log>
         <property name="uri.var.instanciaBPM_url" expression="fn:concat($ctx:api_url,'/bpm/proceso/instancia')" scope="default"/>
         <call>
            <endpoint>
               <http method="POST" uri-template="{uri.var.instanciaBPM_url}"/>
            </endpoint>
         </call>
         <filter source="get-property('axis2', 'HTTP_SC')" regex="2[0-9][0-9]">
            <then/>
            <else>
               <property name="ERROR_MESSAGE" expression="json-eval($)" type="STRING"/>
               <header name="Accept" scope="transport" value="application/json"/>
               <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
               <payloadFactory media-type="json" description="borrar solicitud">
                  <format>{ "_delete_solicitudretiro": { "sore_id":"$1"} }</format>
                  <args>
                     <arg evaluator="xml" expression="get-property('setIdEnHijos_id_padre')"/>
                  </args>
               </payloadFactory>
               <property name="uri.var.solicitudRetiroDELETE" expression="fn:concat($ctx:dataservices_url,'/solicitudRetiro')" scope="default"/>
               <call>
                  <endpoint>
                     <http method="DELETE" uri-template="{uri.var.solicitudRetiroDELETE}"/>
                  </endpoint>
               </call>
               <property name="TOOLS_ERROR" value="POST /bpm/proceso/instancia con problemas" type="STRING"/>
               <sequence key="toolsFault"/>
            </else>
         </filter>
         <log level="custom" category="DEBUG" description="donde 4">
            <property name="msg actual 6 despues de BPM" expression="json-eval($)"/>
         </log>
         <property name="uri.var.caseid" expression="json-eval($.payload.caseId)" type="STRING"/>
         <property name="uri.var.bpmSession" expression="json-eval($.session)" type="STRING"/>
         <header name="Accept" scope="transport" value="application/json"/>
         <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
         <payloadFactory media-type="json" description="actualizar solicitud">
            <format>                               {      "_put_solicitudretiro_caseid":{        "case_id":"$1",         "sore_id":"$2"        }      }      </format>
            <args>
               <arg evaluator="json" expression="$.payload.caseId"/>
               <arg evaluator="xml" expression="get-property('setIdEnHijos_id_padre')"/>
            </args>
         </payloadFactory>
         <log level="custom" category="DEBUG" description="donde 4">
            <property name="msg actual 7 despues de BPM antes de actualizar caseid" expression="json-eval($)"/>
         </log>
         <property name="uri.var.solicitudRetiroCaseId_url" expression="fn:concat($ctx:dataservices_url,'/solicitudRetiro/caseid')" scope="default"/>
         <call>
            <endpoint>
               <http method="PUT" uri-template="{uri.var.solicitudRetiroCaseId_url}"/>
            </endpoint>
         </call>
         <filter source="get-property('axis2', 'HTTP_SC')" regex="2[0-9][0-9]">
            <then/>
            <else>
               <property name="ERROR_MESSAGE" expression="json-eval($)" type="STRING"/>
               <header name="Accept" scope="transport" value="application/json"/>
               <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
               <payloadFactory media-type="json" description="borrar solicitud">
                  <format>{ "_delete_solicitudretiro": { "sore_id":"$1"} }</format>
                  <args>
                     <arg evaluator="xml" expression="get-property('setIdEnHijos_id_padre')"/>
                  </args>
               </payloadFactory>
               <property name="uri.var.solicitudRetiroDELETE" expression="fn:concat($ctx:dataservices_url,'/solicitudRetiro')" scope="default"/>
               <call>
                  <endpoint>
                     <http method="DELETE" uri-template="{uri.var.solicitudRetiroDELETE}"/>
                  </endpoint>
               </call>
               <header name="Accept" scope="transport" value="application/json"/>
               <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
               <property name="uri.var.borrarInstanciaBPM_url" expression="fn:concat($ctx:api_url,'/bpm/proceso/instancia/')" scope="default"/>
               <log level="custom" category="DEBUG" description="donde 10">
                  <property name="msg actual 10 eliminando caso de BPM" expression="json-eval($)"/>
                  <property name="url actual 10 eliminando caso de BPM" expression="$ctx:uri.var.borrarInstanciaBPM_url"/>
               </log>
               <call>
                  <endpoint>
                     <http method="DELETE" uri-template="{uri.var.borrarInstanciaBPM_url}"/>
                  </endpoint>
               </call>
               <property name="TOOLS_ERROR" value="PUT /solicitudRetiro/caseid con problemas" type="STRING"/>
               <sequence key="toolsFault"/>
            </else>
         </filter>
         <log level="full" category="DEBUG" description="salida insequence"/>
         <loopback/>
      </inSequence>
      <outSequence>
         <log level="full" category="DEBUG">
            <property name="MESSAGE" value="FIRST"/>
         </log>
         <payloadFactory media-type="json" description="Mensaje error">
            <format>{"respuesta":              { "resultado" : "ok"              , "sore_id":"$1"                 , "case_id":"$2"           , "bpmSession":"$3"   }             }</format>
            <args>
               <arg evaluator="xml" expression="get-property('setIdEnHijos_id_padre')"/>
               <arg evaluator="xml" expression="get-property('uri.var.caseid')"/>
               <arg evaluator="xml" expression="get-property('uri.var.bpmSession')"/>
            </args>
         </payloadFactory>
         <log level="full"/>
         <send/>
      </outSequence>
      <faultSequence>
         <property name="ERROR_MESSAGE" expression="json-eval($)" type="STRING"/>
         <property name="TOOLS_ERROR" value="Error General generando Solicitud de Retiro de Contendores" type="STRING"/>
         <sequence key="toolsFault"/>
      </faultSequence>
   </resource>
   <resource methods="POST" uri-template="/ordenTransporte">
      <inSequence>
         <property name="uri.var.bpmSession" value="$.uri.var.bpmSession" type="STRING"/>
         <property xmlns:ns2="http://org.apache.synapse/xsd" xmlns:ns="http://org.apache.synapse/xsd" name="apiconf" expression="get-property('registry','conf:tools/apiconf.xml')" scope="default" type="OM"/>
         <property xmlns:ns2="http://org.apache.synapse/xsd" xmlns:ns="http://org.apache.synapse/xsd" name="api_url" expression="$ctx:apiconf//api_url"/>
         <property xmlns:ns2="http://org.apache.synapse/xsd" xmlns:ns="http://org.apache.synapse/xsd" name="dataservices_url" expression="$ctx:apiconf//dataservices_url"/>
         <log level="custom">
            <property name="donde" value="dentro de generacion Orden Transporte"/>
            <property name="payload" expression="json-eval($)"/>
         </log>
         <script language="js">var payload = mc.getPayloadJSON();  mc.setProperty("ORIGINAL_PAYLOAD",JSON.stringify(payload));</script>
         <payloadFactory media-type="json" description="crear ot">
            <format>       {          "_post_ordentransporte":{          "fec_retiro":"$1",         "difi_id":"$2",       "sotr_id":"$3",       "equi_id":"$4",       "chof_id":"$5",        "usuario_app": "$6"  ,"tran_id":"$7"  }     }     </format>
            <args>
               <arg evaluator="json" expression="$.ordenTransporte.fec_retiro"/>
               <arg evaluator="json" expression="$.ordenTransporte.difi_id"/>
               <arg evaluator="json" expression="$.ordenTransporte.sotr_id"/>
               <arg evaluator="json" expression="$.ordenTransporte.equi_id"/>
               <arg evaluator="json" expression="$.ordenTransporte.chof_id"/>
               <arg evaluator="json" expression="$.ordenTransporte.usuario_app"/>
               <arg evaluator="json" expression="$.ordenTransporte.tran_id"/>
            </args>
         </payloadFactory>
         <property name="messageType" value="application/json" scope="axis2"/>
         <header name="Accept" scope="transport" value="application/json"/>
         <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
         <log level="custom" category="DEBUG" description="aca">
            <property name="msg actual 2 antes orden transporte " expression="json-eval($)"/>
         </log>
         <property name="uri.var.ordenTransporte_url" expression="fn:concat($ctx:dataservices_url,'/ordenTransporte')" scope="default"/>
         <call>
            <endpoint>
               <http method="POST" uri-template="{uri.var.ordenTransporte_url}"/>
            </endpoint>
         </call>
         <filter source="get-property('axis2', 'HTTP_SC')" regex="2[0-9][0-9]">
            <then/>
            <else>
               <property name="ERROR_MESSAGE" expression="json-eval($)" type="STRING"/>
               <property name="TOOLS_ERROR" value="POST /ordenTransporte con problemas" type="STRING"/>
               <sequence key="toolsFault"/>
            </else>
         </filter>
         <log level="custom" category="DEBUG" description="donde 3">
            <property name="msg actual 3 despues orden transporte" expression="json-eval($)"/>
            <property name="ortr id" expression="json-eval($.respuesta.ortr_id)"/>
         </log>
         <property name="setIdEnHijos_elemento_origen" value="ordenTransporte" type="STRING"/>
         <property name="setIdEnHijos_elemento_destino" value="_put_contenedores_retirados_batch_req" type="STRING"/>
         <property name="setIdEnHijos_arreglo_origen" value="contenedores" type="STRING"/>
         <property name="setIdEnHijos_arreglo_destino" value="_put_contenedores_retirados" type="STRING"/>
         <property name="setIdEnHijos_propiedad_destino" value="ortr_id" type="STRING"/>
         <property name="setIdEnHijos_id_padre" expression="json-eval($.respuesta.ortr_id)" type="STRING"/>
         <script language="js" key="conf:tools/setIdEnHijos.js" function="setIdEnHijos"/>
         <header name="Accept" scope="transport" value="application/json"/>
         <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
         <log level="custom" category="DEBUG" description="donde 4">
            <property name="msg actual 4 antes de contenedores entregados solicitud retiro " expression="json-eval($)"/>
         </log>
         <property name="uri.var.contenedoresRetirados_url" expression="fn:concat($ctx:dataservices_url,'/_put_contenedores_retirados_batch_req')" scope="default"/>
         <call>
            <endpoint>
               <http method="PUT" uri-template="{uri.var.contenedoresRetirados_url}"/>
            </endpoint>
         </call>
         <filter source="get-property('axis2', 'HTTP_SC')" regex="2[0-9][0-9]">
            <then/>
            <else>
               <property name="ERROR_MESSAGE" expression="json-eval($)" type="STRING"/>
               <header name="Accept" scope="transport" value="application/json"/>
               <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
               <payloadFactory media-type="json" description="borrar solicitud">
                  <format>{ "_delete_ordentransporte": { "ortr_id":"$1"} }</format>
                  <args>
                     <arg evaluator="xml" expression="get-property('setIdEnHijos_id_padre')"/>
                  </args>
               </payloadFactory>
               <property name="uri.var.ordenTransporteDELETE" expression="fn:concat($ctx:dataservices_url,'/ordenTransporte')" scope="default"/>
               <log level="custom" category="DEBUG" description="donde delete 4">
                  <property name="msg delete" expression="json-eval($)"/>
                  <property name="url delete" expression="$ctx:uri.var.ordenTransporteDELETE"/>
               </log>
               <call>
                  <endpoint>
                     <http method="DELETE" uri-template="{uri.var.ordenTransporteDELETE}"/>
                  </endpoint>
               </call>
               <property name="TOOLS_ERROR" value="PUT /_put_contenedores_retirados_batch_req con problemas" type="STRING"/>
               <sequence key="toolsFault"/>
            </else>
         </filter>
         <log level="custom" category="DEBUG" description="donde 4">
            <property name="msg actual 5 despues de contenedores retirados" expression="json-eval($)"/>
         </log>
         <header name="Accept" scope="transport" value="application/json"/>
         <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
         <payloadFactory media-type="json" description="crear solicitud">
            <format>                 { "nombre_proceso": "TERSU-BPM03"     ,"payload" : { "ortr_id":"$1"}     ,"session" :"$2"          }     </format>
            <args>
               <arg evaluator="xml" expression="get-property('setIdEnHijos_id_padre')"/>
               <arg evaluator="xml" expression="get-property('uri.var.bpmSession')"/>
            </args>
         </payloadFactory>
         <log level="custom" category="DEBUG" description="donde 4">
            <property name="msg actual 5 antes de BPM" expression="json-eval($)"/>
         </log>
         <property name="uri.var.instanciaBPM_url" expression="fn:concat($ctx:api_url,'/bpm/proceso/instancia')" scope="default"/>
         <call>
            <endpoint>
               <http method="POST" uri-template="{uri.var.instanciaBPM_url}"/>
            </endpoint>
         </call>
         <filter source="get-property('axis2', 'HTTP_SC')" regex="2[0-9][0-9]">
            <then/>
            <else>
               <property name="ERROR_MESSAGE" expression="json-eval($)" type="STRING"/>
               <header name="Accept" scope="transport" value="application/json"/>
               <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
               <payloadFactory media-type="json" description="borrar solicitud">
                  <format>{ "_delete_ordentransporte": { "ortr_id":"$1"} }</format>
                  <args>
                     <arg evaluator="xml" expression="get-property('setIdEnHijos_id_padre')"/>
                  </args>
               </payloadFactory>
               <property name="uri.var.ordenTransporteDELETE" expression="fn:concat($ctx:dataservices_url,'/ordenTransporte')" scope="default"/>
               <log level="custom" category="DEBUG" description="donde delete 4">
                  <property name="msg delete" expression="json-eval($)"/>
                  <property name="url delete" expression="$ctx:uri.var.ordenTransporteDELETE"/>
               </log>
               <call>
                  <endpoint>
                     <http method="DELETE" uri-template="{uri.var.ordenTransporteDELETE}"/>
                  </endpoint>
               </call>
               <property name="TOOLS_ERROR" value="POST /bpm/proceso/instancia con problemas" type="STRING"/>
               <sequence key="toolsFault"/>
            </else>
         </filter>
         <log level="custom" category="DEBUG" description="donde 4">
            <property name="msg actual 6 despues de BPM" expression="json-eval($)"/>
         </log>
         <property name="uri.var.caseid" expression="json-eval($.payload.caseId)" type="STRING"/>
         <property name="uri.var.bpmSession" expression="json-eval($.session)" type="STRING"/>
         <header name="Accept" scope="transport" value="application/json"/>
         <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
         <payloadFactory media-type="json" description="actualizar solicitud">
            <format>                               {      "_put_ordentransporte_caseid":{        "case_id":"$1",         "ortr_id":"$2"        }      }      </format>
            <args>
               <arg evaluator="json" expression="$.payload.caseId"/>
               <arg evaluator="xml" expression="get-property('setIdEnHijos_id_padre')"/>
            </args>
         </payloadFactory>
         <log level="custom" category="DEBUG" description="donde 4">
            <property name="msg actual 7 despues de BPM antes de actualizar caseid" expression="$ctx:caseid"/>
            <property name="msg actual 7 despues de BPM antes de actualizar caseid" expression="json-eval($)"/>
         </log>
         <property name="uri.var.ordenTransporteCaseId_url" expression="fn:concat($ctx:dataservices_url,'/ordenTransporte/caseid')" scope="default"/>
         <call>
            <endpoint>
               <http method="PUT" uri-template="{uri.var.ordenTransporteCaseId_url}"/>
            </endpoint>
         </call>
         <filter source="get-property('axis2', 'HTTP_SC')" regex="2[0-9][0-9]">
            <then/>
            <else>
               <property name="ERROR_MESSAGE" expression="json-eval($)" type="STRING"/>
               <header name="Accept" scope="transport" value="application/json"/>
               <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
               <payloadFactory media-type="json" description="borrar solicitud">
                  <format>{ "_delete_ordentransporte": { "ortr_id":"$1"} }</format>
                  <args>
                     <arg evaluator="xml" expression="get-property('setIdEnHijos_id_padre')"/>
                  </args>
               </payloadFactory>
               <property name="uri.var.ordenTransporteDELETE" expression="fn:concat($ctx:dataservices_url,'/ordenTransporte')" scope="default"/>
               <call>
                  <endpoint>
                     <http method="DELETE" uri-template="{uri.var.ordenTransporteDELETE}"/>
                  </endpoint>
               </call>
               <payloadFactory media-type="json" description="Borrar instancia bpm">
                  <format>{"caseid":"$1", "session":"$2"} </format>
                  <args>
                     <arg evaluator="xml" expression="get-property('uri.var.caseid')"/>
                     <arg evaluator="xml" expression="get-property('uri.var.bpmSession')"/>
                  </args>
               </payloadFactory>
               <header name="Accept" scope="transport" value="application/json"/>
               <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
               <property name="uri.var.borrarInstanciaBPM_url" expression="fn:concat($ctx:api_url,'/bpm/proceso/instancia/')" scope="default"/>
               <log level="custom" category="DEBUG" description="donde 10">
                  <property name="msg actual 10 eliminando caso de BPM" expression="json-eval($)"/>
                  <property name="url actual 10 eliminando caso de BPM" expression="$ctx:uri.var.borrarInstanciaBPM_url"/>
               </log>
               <call>
                  <endpoint>
                     <http method="DELETE" uri-template="{uri.var.borrarInstanciaBPM_url}"/>
                  </endpoint>
               </call>
               <property name="TOOLS_ERROR" value="PUT /ordenTransporte/caseid con problemas" type="STRING"/>
               <sequence key="toolsFault"/>
            </else>
         </filter>
         <log level="full" category="DEBUG" description="salida insequence"/>
         <loopback/>
      </inSequence>
      <outSequence>
         <log level="full" category="DEBUG">
            <property name="MESSAGE" value="FIRST"/>
         </log>
         <payloadFactory media-type="json" description="Mensaje error">
            <format>{"respuesta":              { "resultado" : "ok"              , "ortr_id":"$1"                 , "case_id":"$2"           , "bpmSession":"$3"   }             }</format>
            <args>
               <arg evaluator="xml" expression="get-property('setIdEnHijos_id_padre')"/>
               <arg evaluator="xml" expression="get-property('uri.var.caseid')"/>
               <arg evaluator="xml" expression="get-property('uri.var.bpmSession')"/>
            </args>
         </payloadFactory>
         <log level="full"/>
         <send/>
      </outSequence>
      <faultSequence>
         <property name="ERROR_MESSAGE" expression="json-eval($)" type="STRING"/>
         <property name="TOOLS_ERROR" value="Error General generando Orden de Transporte" type="STRING"/>
         <sequence key="toolsFault"/>
      </faultSequence>
   </resource>
   <resource methods="POST" uri-template="/ordenTransporte/desdeTemplate">
      <inSequence>
         <property name="uri.var.bpmSession" value="$.uri.var.bpmSession" type="STRING"/>
         <property xmlns:ns2="http://org.apache.synapse/xsd" xmlns:ns="http://org.apache.synapse/xsd" name="apiconf" expression="get-property('registry','conf:tools/apiconf.xml')" scope="default" type="OM"/>
         <property xmlns:ns2="http://org.apache.synapse/xsd" xmlns:ns="http://org.apache.synapse/xsd" name="api_url" expression="$ctx:apiconf//api_url"/>
         <property xmlns:ns2="http://org.apache.synapse/xsd" xmlns:ns="http://org.apache.synapse/xsd" name="dataservices_url" expression="$ctx:apiconf//dataservices_url"/>
         <log level="custom">
            <property name="donde" value="dentro de generacion Orden Transporte"/>
            <property name="payload" expression="json-eval($)"/>
         </log>
         <script language="js">var payload = mc.getPayloadJSON();  mc.setProperty("ORIGINAL_PAYLOAD",JSON.stringify(payload));</script>
         <payloadFactory media-type="json" description="crear ot">
            <format>       {          "_post_ordentransporte":{          "fec_retiro":"$1",         "difi_id":"$2",       "sotr_id":"$3",       "equi_id":"$4",       "chof_id":"$5",        "usuario_app": "$6"  ,"teot_id":"$7" ,"tran_id":"$8"  }     }     </format>
            <args>
               <arg evaluator="json" expression="$.ordenTransporte.fec_retiro"/>
               <arg evaluator="json" expression="$.ordenTransporte.difi_id"/>
               <arg evaluator="json" expression="$.ordenTransporte.sotr_id"/>
               <arg evaluator="json" expression="$.ordenTransporte.equi_id"/>
               <arg evaluator="json" expression="$.ordenTransporte.chof_id"/>
               <arg evaluator="json" expression="$.ordenTransporte.usuario_app"/>
               <arg evaluator="json" expression="$.ordenTransporte.teot_id"/>
               <arg evaluator="json" expression="$.ordenTransporte.tran_id"/>
            </args>
         </payloadFactory>
         <property name="messageType" value="application/json" scope="axis2"/>
         <header name="Accept" scope="transport" value="application/json"/>
         <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
         <log level="custom" category="DEBUG" description="aca">
            <property name="msg actual 2 antes orden transporte " expression="json-eval($)"/>
         </log>
         <property name="uri.var.ordenTransporte_url" expression="fn:concat($ctx:dataservices_url,'/ordenTransporte')" scope="default"/>
         <call>
            <endpoint>
               <http method="POST" uri-template="{uri.var.ordenTransporte_url}"/>
            </endpoint>
         </call>
         <filter source="get-property('axis2', 'HTTP_SC')" regex="2[0-9][0-9]">
            <then/>
            <else>
               <property name="ERROR_MESSAGE" expression="json-eval($)" type="STRING"/>
               <property name="TOOLS_ERROR" value="POST /ordenTransporte con problemas" type="STRING"/>
               <sequence key="toolsFault"/>
            </else>
         </filter>
         <log level="custom" category="DEBUG" description="donde 3">
            <property name="msg actual 3 despues orden transporte" expression="json-eval($)"/>
            <property name="ortr id" expression="json-eval($.respuesta.ortr_id)"/>
         </log>
         <property name="setIdEnHijos_elemento_origen" value="ordenTransporte" type="STRING"/>
         <property name="setIdEnHijos_elemento_destino" value="_put_contenedores_retirados_batch_req" type="STRING"/>
         <property name="setIdEnHijos_arreglo_origen" value="contenedores" type="STRING"/>
         <property name="setIdEnHijos_arreglo_destino" value="_put_contenedores_retirados" type="STRING"/>
         <property name="setIdEnHijos_propiedad_destino" value="ortr_id" type="STRING"/>
         <property name="setIdEnHijos_id_padre" expression="json-eval($.respuesta.ortr_id)" type="STRING"/>
         <script language="js" key="conf:tools/setIdEnHijos.js" function="setIdEnHijos"/>
         <header name="Accept" scope="transport" value="application/json"/>
         <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
         <log level="custom" category="DEBUG" description="donde 4">
            <property name="msg actual 4 antes de contenedores entregados solicitud retiro " expression="json-eval($)"/>
         </log>
         <property name="uri.var.contenedoresRetirados_url" expression="fn:concat($ctx:dataservices_url,'/_put_contenedores_retirados_batch_req')" scope="default"/>
         <call>
            <endpoint>
               <http method="PUT" uri-template="{uri.var.contenedoresRetirados_url}"/>
            </endpoint>
         </call>
         <filter source="get-property('axis2', 'HTTP_SC')" regex="2[0-9][0-9]">
            <then/>
            <else>
               <property name="ERROR_MESSAGE" expression="json-eval($)" type="STRING"/>
               <header name="Accept" scope="transport" value="application/json"/>
               <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
               <payloadFactory media-type="json" description="borrar solicitud">
                  <format>{ "_delete_ordentransporte": { "ortr_id":"$1"} }</format>
                  <args>
                     <arg evaluator="xml" expression="get-property('setIdEnHijos_id_padre')"/>
                  </args>
               </payloadFactory>
               <property name="uri.var.ordenTransporteDELETE" expression="fn:concat($ctx:dataservices_url,'/ordenTransporte')" scope="default"/>
               <log level="custom" category="DEBUG" description="donde delete 4">
                  <property name="msg delete" expression="json-eval($)"/>
                  <property name="url delete" expression="$ctx:uri.var.ordenTransporteDELETE"/>
               </log>
               <call>
                  <endpoint>
                     <http method="DELETE" uri-template="{uri.var.ordenTransporteDELETE}"/>
                  </endpoint>
               </call>
               <property name="TOOLS_ERROR" value="PUT /_put_contenedores_retirados_batch_req con problemas" type="STRING"/>
               <sequence key="toolsFault"/>
            </else>
         </filter>
         <log level="custom" category="DEBUG" description="donde 4">
            <property name="msg actual 5 despues de contenedores retirados" expression="json-eval($)"/>
         </log>
         <header name="Accept" scope="transport" value="application/json"/>
         <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
         <payloadFactory media-type="json" description="crear solicitud">
            <format>                 { "nombre_proceso": "TERSU-BPM03"     ,"payload" : { "ortr_id":"$1"}     ,"session" :"$2"          }     </format>
            <args>
               <arg evaluator="xml" expression="get-property('setIdEnHijos_id_padre')"/>
               <arg evaluator="xml" expression="get-property('uri.var.bpmSession')"/>
            </args>
         </payloadFactory>
         <log level="custom" category="DEBUG" description="donde 4">
            <property name="msg actual 5 antes de BPM" expression="json-eval($)"/>
         </log>
         <property name="uri.var.instanciaBPM_url" expression="fn:concat($ctx:api_url,'/bpm/proceso/instancia')" scope="default"/>
         <call>
            <endpoint>
               <http method="POST" uri-template="{uri.var.instanciaBPM_url}"/>
            </endpoint>
         </call>
         <filter source="get-property('axis2', 'HTTP_SC')" regex="2[0-9][0-9]">
            <then/>
            <else>
               <property name="ERROR_MESSAGE" expression="json-eval($)" type="STRING"/>
               <header name="Accept" scope="transport" value="application/json"/>
               <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
               <payloadFactory media-type="json" description="borrar solicitud">
                  <format>{ "_delete_ordentransporte": { "ortr_id":"$1"} }</format>
                  <args>
                     <arg evaluator="xml" expression="get-property('setIdEnHijos_id_padre')"/>
                  </args>
               </payloadFactory>
               <property name="uri.var.ordenTransporteDELETE" expression="fn:concat($ctx:dataservices_url,'/ordenTransporte')" scope="default"/>
               <log level="custom" category="DEBUG" description="donde delete 4">
                  <property name="msg delete" expression="json-eval($)"/>
                  <property name="url delete" expression="$ctx:uri.var.ordenTransporteDELETE"/>
               </log>
               <call>
                  <endpoint>
                     <http method="DELETE" uri-template="{uri.var.ordenTransporteDELETE}"/>
                  </endpoint>
               </call>
               <property name="TOOLS_ERROR" value="POST /bpm/proceso/instancia con problemas" type="STRING"/>
               <sequence key="toolsFault"/>
            </else>
         </filter>
         <log level="custom" category="DEBUG" description="donde 4">
            <property name="msg actual 6 despues de BPM" expression="json-eval($)"/>
         </log>
         <property name="uri.var.caseid" expression="json-eval($.payload.caseId)" type="STRING"/>
         <property name="uri.var.bpmSession" expression="json-eval($.session)" type="STRING"/>
         <header name="Accept" scope="transport" value="application/json"/>
         <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
         <payloadFactory media-type="json" description="actualizar solicitud">
            <format>                               {      "_put_ordentransporte_caseid":{        "case_id":"$1",         "ortr_id":"$2"        }      }      </format>
            <args>
               <arg evaluator="json" expression="$.payload.caseId"/>
               <arg evaluator="xml" expression="get-property('setIdEnHijos_id_padre')"/>
            </args>
         </payloadFactory>
         <log level="custom" category="DEBUG" description="donde 4">
            <property name="msg actual 7 despues de BPM antes de actualizar caseid" expression="$ctx:caseid"/>
            <property name="msg actual 7 despues de BPM antes de actualizar caseid" expression="json-eval($)"/>
         </log>
         <property name="uri.var.ordenTransporteCaseId_url" expression="fn:concat($ctx:dataservices_url,'/ordenTransporte/caseid')" scope="default"/>
         <call>
            <endpoint>
               <http method="PUT" uri-template="{uri.var.ordenTransporteCaseId_url}"/>
            </endpoint>
         </call>
         <filter source="get-property('axis2', 'HTTP_SC')" regex="2[0-9][0-9]">
            <then/>
            <else>
               <property name="ERROR_MESSAGE" expression="json-eval($)" type="STRING"/>
               <header name="Accept" scope="transport" value="application/json"/>
               <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
               <payloadFactory media-type="json" description="borrar solicitud">
                  <format>{ "_delete_ordentransporte": { "ortr_id":"$1"} }</format>
                  <args>
                     <arg evaluator="xml" expression="get-property('setIdEnHijos_id_padre')"/>
                  </args>
               </payloadFactory>
               <property name="uri.var.ordenTransporteDELETE" expression="fn:concat($ctx:dataservices_url,'/ordenTransporte')" scope="default"/>
               <call>
                  <endpoint>
                     <http method="DELETE" uri-template="{uri.var.ordenTransporteDELETE}"/>
                  </endpoint>
               </call>
               <payloadFactory media-type="json" description="Borrar instancia bpm">
                  <format>{"caseid":"$1", "session":"$2"} </format>
                  <args>
                     <arg evaluator="xml" expression="get-property('uri.var.caseid')"/>
                     <arg evaluator="xml" expression="get-property('uri.var.bpmSession')"/>
                  </args>
               </payloadFactory>
               <header name="Accept" scope="transport" value="application/json"/>
               <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
               <property name="uri.var.borrarInstanciaBPM_url" expression="fn:concat($ctx:api_url,'/bpm/proceso/instancia/')" scope="default"/>
               <log level="custom" category="DEBUG" description="donde 10">
                  <property name="msg actual 10 eliminando caso de BPM" expression="json-eval($)"/>
                  <property name="url actual 10 eliminando caso de BPM" expression="$ctx:uri.var.borrarInstanciaBPM_url"/>
               </log>
               <call>
                  <endpoint>
                     <http method="DELETE" uri-template="{uri.var.borrarInstanciaBPM_url}"/>
                  </endpoint>
               </call>
               <property name="TOOLS_ERROR" value="PUT /ordenTransporte/caseid con problemas" type="STRING"/>
               <sequence key="toolsFault"/>
            </else>
         </filter>
         <log level="full" category="DEBUG" description="salida insequence"/>
         <loopback/>
      </inSequence>
      <outSequence>
         <log level="full" category="DEBUG">
            <property name="MESSAGE" value="FIRST"/>
         </log>
         <payloadFactory media-type="json" description="Mensaje error">
            <format>{"respuesta":              { "resultado" : "ok"              , "ortr_id":"$1"                 , "case_id":"$2"           , "bpmSession":"$3"   }             }</format>
            <args>
               <arg evaluator="xml" expression="get-property('setIdEnHijos_id_padre')"/>
               <arg evaluator="xml" expression="get-property('uri.var.caseid')"/>
               <arg evaluator="xml" expression="get-property('uri.var.bpmSession')"/>
            </args>
         </payloadFactory>
         <log level="full"/>
         <send/>
      </outSequence>
      <faultSequence>
         <property name="ERROR_MESSAGE" expression="json-eval($)" type="STRING"/>
         <property name="TOOLS_ERROR" value="Error General generando Orden de Transporte" type="STRING"/>
         <sequence key="toolsFault"/>
      </faultSequence>
   </resource>
</api>
